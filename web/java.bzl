# Copyright 2016 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Web Test rules for Java."""

load("//web:web.bzl", "web_test_suite")


def java_web_test_suite(name,
                        browsers,
                        args=None,
                        browser_overrides=None,
                        config=None,
                        flaky=None,
                        java_test_tags=("manual", "notap"),
                        local=None,
                        shard_count=None,
                        size="large",
                        tags=None,
                        test_class=None,
                        test_suite_tags=("manual",),
                        timeout=None,
                        visibility=None,
                        web_test_data=None,
                        **remaining_keyword_args):
  """Defines a test_suite of web_test targets that wrap a java_test target.

  Any attribute for java_test is supported by java_web_test_suite. If the
  argument isn't listed below, then the argument values have the same
  exact meaning as in java_test.

  If any attributes are specified per-browser in browser_overrides, web tests
  will be created for the corresponding browsers with the specific attributes
  overridding the top-level definitions.

  Args:
    name: The base name of the test.
    browsers: A sequence of labels specifying the browsers to use.
    args: Args for web_test targets generated by this extension.
    browser_overrides: Dictionary mapping from browsers to browser-specific
      attributes, such as shard_count, flakiness, timeout, etc. For example:
      {'chrome-linux': {'shard_count': 3, 'flaky': 1}
       'firefox-linux': {'shard_count': 1, 'size': 'medium', 'timeout': 100}}
      (default: an empty dictionary)
    config: Label; optional; Configuration of web test features.
    flaky: A boolean specifying that the test is flaky. If set, the test will
      be retried up to 3 times (default: 0)
    java_test_tags: A list of test tag strings to use for the java_test target.
      Defaults to ['manual',].
    local: boolean; optional.
    shard_count: The number of test shards to use per browser. (default: 1)
    size: A string specifying the test size. (default: 'large')
    tags: A list of test tag strings to use for the web_test targets.
    test_class: A string specifying the Java test class (default: computed
      from name)
    test_suite_tags: A list of tag strings for the generated test_suite.
    timeout: A string specifying the test timeout (default: computed from size)
    visibility: The visibility of the generated web_test and test_suite rules.
    web_test_data: Data dependencies for the web_test.
    **remaining_keyword_args: Arguments for java_test
  """
  java_test_name = name + "_wrapped_test"
  if test_class == None:
    test_package = PACKAGE_NAME.replace("javatests/", "").replace("/", ".")
    test_class = test_package + "." + name

  native.java_test(
      name=java_test_name,
      args=args,
      flaky=flaky,
      local=local,
      shard_count=shard_count,
      size=size,
      tags=java_test_tags,
      test_class=test_class,
      timeout=timeout,
      visibility=["//visibility:private"],
      **remaining_keyword_args)

  web_test_suite(
      name=name,
      args=args,
      browsers=browsers,
      browser_overrides=browser_overrides,
      config=config,
      data=web_test_data,
      flaky=flaky,
      local=local,
      shard_count=shard_count,
      size=size,
      tags=tags,
      test=java_test_name,
      test_suite_tags=test_suite_tags,
      timeout=timeout,
      visibility=visibility)
